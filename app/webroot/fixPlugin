<?php
/**
 * Plugin Name: DFP Mediatrends - www.chilerunning.com
 * Plugin URI: http://mediatrends.cl
 * Description: Personalizacion de ads
 * Version: 2
 * Author: Mediatrends
 * Author URI: http://mediatrends.cl
 */

global $adunits;
$adunits = '{"92231893":{"id_tag_template":"#block_autopromo","div_display":"<div id=\"zona-92231893\" style=\"width:125px; height:125px;\"><script type=\"text\/javascript\">googletag.display(\"zona-92231893\");<\/script><\/div>"}}';

function activar_plugin() {
	global $adunits;

	$hasPreviuos = get_option('mt_plugin');
	if ($hasPreviuos) {
		cleanTagTemplates($hasPreviuos);
		add_option( 'mt_plugin', $adunits );
	} else {
		add_option( 'mt_plugin', $adunits );
	}
	

	$units = json_decode($adunits);
	$erroWrite = array();
	$pathTemplate = get_template_directory();
	$objects = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($pathTemplate), RecursiveIteratorIterator::SELF_FIRST);
	foreach($objects as $name => $object){
		if (preg_match('/^.+\.php$/i', $name)) {
			if (is_writable($name)) {
				$phpFileTemplate = file_get_contents($name);

				foreach ($units as $key => $unit) {
					$id_tag_template = str_replace("#", "", $unit->id_tag_template);
					preg_match('/(<div.*?id="' . $id_tag_template . '"[^>]*>)(.*?)(<\/div>)/i', $phpFileTemplate, $matches);
					if (count($matches) > 0) {
						if (!empty($matches[2])) {
							$divReplace = '$1$4';
						} else {
							$divReplace = '$1$3';
						}
						$htmlAd = $unit->div_display;
						$result = preg_replace('/(<div.*?id="' . $id_tag_template . '"[^>]*>)(.*?)(<\/div>)/i', $divReplace, $phpFileTemplate);
						$result = preg_replace('/(<div.*?id="' . $id_tag_template . '"[^>]*>)(.*?)(<\/div>)/i', '$1' . $htmlAd . '$3', $result);
						file_put_contents($name, $result);
					}
				}
			} else {
				$erroWrite[] = $name;
			}
		}
	}
}
register_activation_hook( __FILE__, 'activar_plugin' );

function desactivar_plugin( $plugin, $network_activation ) {
	global $adunits;
	cleanTagTemplates($adunits);
	delete_option( 'mt_plugin' );
}
add_action( 'deactivated_plugin', 'desactivar_plugin', 10, 2 );

add_action('wp_head', 'head_setup_mt');
function head_setup_mt() {
?>
	<script type='text/javascript'>
(function() {
var useSSL = 'https:' == document.location.protocol;
var src = (useSSL ? 'https:' : 'http:') +
'//www.googletagservices.com/tag/js/gpt.js';
document.write('<scr' + 'ipt src="' + src + '"></scr' + 'ipt>');
})();
</script>

<script type='text/javascript'>
googletag.defineSlot('/92947493/125x125_CHISKATE_all', [125,125], 'zona-92231893').addService(googletag.pubads());
googletag.pubads().enableSingleRequest();
googletag.pubads().enableSyncRendering();
googletag.enableServices();
</script>

	<style type="text/css">
		
	</style>
<?php
}

function wath_widget_media($text) {
	global $adunits;

	$units = json_decode($adunits);

	foreach ($units as $key => $unit) {
		$id_tag_template = str_replace("#", "", $unit->id_tag_template);
		preg_match('/(<div.*?id="' . $id_tag_template . '"[^>]*>)(.*?)(<\/div>)/i', $text, $matches);
		if (count($matches) > 0) {
			$htmlAd = $unit->div_display;
			$result = preg_replace('/(<div.*?id="' . $id_tag_template . '"[^>]*>)(.*?)(<\/div>)/i', '$1$3', $text);
			$result = preg_replace('/(<div.*?id="' . $id_tag_template . '"[^>]*>)(.*?)(<\/div>)/i', '$1' . $htmlAd . '$3', $result);
		}
	}

	return (!empty($result)) ? $result : $text;
}
add_filter('widget_text', 'wath_widget_media');

function cleanTagTemplates($adunits) {
	$units = json_decode($adunits);
	$erroWrite = array();
	$pathTemplate = get_template_directory();
	$objects = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($pathTemplate), RecursiveIteratorIterator::SELF_FIRST);
	foreach($objects as $name => $object){
		if (preg_match('/^.+\.php$/i', $name)) {
			if (is_writable($name)) {
				$phpFileTemplate = file_get_contents($name);

				foreach ($units as $key => $unit) {
					$id_tag_template = str_replace("#", "", $unit->id_tag_template);
					preg_match('/(<div.*?id="' . $id_tag_template . '"[^>]*>)(.*?)(<\/div>)/i', $phpFileTemplate, $matches);
					if (count($matches) > 0) {
						if (!empty($matches[2])) {
							$htmlAd = $unit->div_display; echo $htmlAd;
							$result = preg_replace('/(<div.*?id="' . $id_tag_template . '"[^>]*>)(.*?)(<\/div>)/i', '$1$4', $phpFileTemplate);
							file_put_contents($name, $result);
						}
					}
				}
			} else {
				$erroWrite[] = $name;
			}
		}
	}
}

//////////////////////////////
//Delete plugins
//////////////////////////////
 /**
 * Check for hook
 */
if ( function_exists('register_uninstall_hook') )
	register_uninstall_hook(__FILE__, 'uninstall_mt');

/**
 * Delete options in database
 */
function uninstall_mt() {
	global $adunits;
	cleanTagTemplates($adunits);
}

//////////////////////////////
//Update plugins
//////////////////////////////
$api_url = 'http://media-adserver.media.cl/repositories';
$plugin_slug = 'mt-www.chilerunning.com_/www.chilerunning.com.php';
$plugin_key = '547f1f15-2518-49dc-871b-0d04de47d803';


// Take over the update check
add_filter('pre_set_site_transient_update_plugins', 'check_for_plugin_update');

function check_for_plugin_update($checked_data) {
	global $api_url, $plugin_slug;
	
	//Comment out these two lines during testing.
	//if (empty($checked_data->checked))
	//	return $checked_data;
	
	$args = array(
		'slug' => $plugin_slug,
		'version' => '2',
	);
	$request_string = array(
			'body' => array(
				'action' => 'basic_check', 
				'request' => serialize($args),
				'api-key' => md5(get_bloginfo('url'))
			),
			'user-agent' => 'WordPress/' . $wp_version . '; ' . get_bloginfo('url')
		);
	
	// Start checking for an update
	$raw_response = wp_remote_post($api_url, $request_string);
	
	if (!is_wp_error($raw_response) && ($raw_response['response']['code'] == 200))
		$response = unserialize($raw_response['body']);
	
	if (is_object($response) && !empty($response)) // Feed the update data into WP updater
		$checked_data->response[$plugin_slug] = $response;
	
	return $checked_data;
}


// Take over the Plugin info screen
add_filter('plugins_api', 'plugin_api_call', 10, 3);

function plugin_api_call($def, $action, $args) {
	global $plugin_slug, $api_url;
	
	// if ($args->slug != $plugin_slug)
	// 	return false;
	
	// Get the current version
	$plugin_info = get_site_transient('update_plugins');
	$current_version = '2';
	$args->version = $current_version;
	
	$request_string = array(
			'body' => array(
				'action' => $action, 
				'request' => serialize($args),
				'api-key' => md5(get_bloginfo('url'))
			),
			'user-agent' => 'WordPress/' . $wp_version . '; ' . get_bloginfo('url')
		);
	
	$request = wp_remote_post($api_url, $request_string);
	
	if (is_wp_error($request)) {
		$res = new WP_Error('plugins_api_failed', __('An Unexpected HTTP Error occurred during the API request.</p> <p><a href="?" onclick="document.location.reload(); return false;">Try again</a>'), $request->get_error_message());
	} else {
		$res = unserialize($request['body']);
		
		if ($res === false)
			$res = new WP_Error('plugins_api_failed', __('An unknown error occurred'), $request['body']);
	}
	
	return $res;
}
